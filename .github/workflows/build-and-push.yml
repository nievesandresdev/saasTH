name: Build and Push Landing Image

on:
  push:
    branches: [ main, test ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install
      
      # Crear el archivo .env con las variables necesarias
      - name: Create .env file
        run: |
          echo "VUE_APP_I18N_LOCALE=${{ secrets.VUE_APP_I18N_LOCALE }}" >> .env
          echo "VUE_APP_I18N_FALLBACK_LOCALE=${{ secrets.VUE_APP_I18N_FALLBACK_LOCALE }}" >> .env
          echo "ADMIN_URL=${{ secrets.ADMIN_URL }}" >> .env
          echo "VUE_APP_API_URL_BACKEND_GENERAL=${{ secrets.VUE_APP_API_URL_BACKEND_GENERAL }}" >> .env
          echo "VUE_APP_STORAGE_URL=${{ secrets.VUE_APP_STORAGE_URL }}" >> .env
          echo "VUE_APP_ENVIROMENT=${{ secrets.VUE_APP_ENVIROMENT }}" >> .env
          echo "PUSHER_APP_ID=${{ secrets.PUSHER_APP_ID }}" >> .env
          echo "PUSHER_APP_KEY=${{ secrets.PUSHER_APP_KEY }}" >> .env
          echo "PUSHER_APP_SECRET=${{ secrets.PUSHER_APP_SECRET }}" >> .env
          echo "PUSHER_APP_CLUSTER=${{ secrets.PUSHER_APP_CLUSTER }}" >> .env
          echo "VUE_APP_PUSHER_APP_KEY=${{ secrets.VUE_APP_PUSHER_APP_KEY }}" >> .env
          echo "VUE_APP_PUSHER_APP_CLUSTER=${{ secrets.VUE_APP_PUSHER_APP_CLUSTER }}" >> .env
          echo "VUE_APP_X_KEY_API=${{ secrets.VUE_APP_X_KEY_API }}" >> .env
          echo "VUE_APP_API_URL_BACKEND_HELPER=${{ secrets.VUE_APP_API_URL_BACKEND_HELPER }}" >> .env
          echo "VUE_APP_KEY_GOOGE=${{ secrets.VUE_APP_KEY_GOOGE }}" >> .env
          echo "VUE_APP_GUEST_URL=${{ secrets.VUE_APP_GUEST_URL }}" >> .env
          echo "VUE_APP_API_URL_REVIEW=${{ secrets.VUE_APP_API_URL_REVIEW }}" >> .env
          echo "VUE_APP_X_KEY_REVIEW=${{ secrets.VUE_APP_X_KEY_REVIEW }}" >> .env
          echo "VUE_APP_ADMIN_URL=${{ secrets.VUE_APP_ADMIN_URL }}" >> .env

      - name: Build project
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Determine image name based on branch
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "IMAGE_NAME=hoster" >> $GITHUB_ENV
          else
            echo "IMAGE_NAME=hoster-test" >> $GITHUB_ENV
          fi

      - name: Build image with docker compose
        run: docker compose build

      - name: Tag image (versioned)
        run: docker tag hoster:latest ghcr.io/th-the-hoster/${{ env.IMAGE_NAME }}:${{ github.run_number }}

      - name: Push versioned image to GHCR
        run: docker push ghcr.io/th-the-hoster/${{ env.IMAGE_NAME }}:${{ github.run_number }}

      # 1. Login a Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 2. Seleccionar la suscripción de Azure
      - name: Set Azure subscription
        run: az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # 3. Configurar el registro privado (GHCR) en la Container App si no está configurado
      - name: Set GHCR Registry
        run: |
          az containerapp registry set \
            --resource-group thehoster-test-ng \
            --name thehostertest-hoster \
            --server ghcr.io \
            --username ${{ secrets.GHCR_ACTOR }} \
            --password ${{ secrets.GHCR_PAT }}

      # 4. Actualizar la Container App con la imagen versionada
      - name: Update Azure Container App image
        run: |
          az containerapp update \
            --name thehostertest-hoster \
            --resource-group thehoster-test-ng \
            --image ghcr.io/th-the-hoster/${{ env.IMAGE_NAME }}:${{ github.run_number }}
